version: "3.4"
services:
  banner:
    container_name: usmartpro-app
    build:
      context: .
      dockerfile: ./build/app/Dockerfile
    depends_on:
      - postgres
      - rabbit
    ports:
      - "8000:8000"
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FILENAME: ${LOG_FILENAME}
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_DSN: ${STORAGE_DSN}
      HTTP_HOST: ${HTTP_HOST}
      HTTP_PORT: ${HTTP_PORT}

  postgres:
    image: postgres:14.2
    container_name: usmartpro-pg
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=banners
    volumes:
      - ../../postgres/data:/var/lib/postgresql/data
      - ../migrations/initdb:/docker-entrypoint-initdb.d
    networks:
      localnet:
        aliases:
          - ${APP_HOST}

  rabbit:
    image: rabbitmq:3.9.11-management
    container_name: usmartpro-banner-rabbit
    ports:
      - "5672:5672"
      - "15672:15672"

  migrations:
    container_name: usmartpro-migrations
    build:
      context: ..
      dockerfile: ./build/migrations/Dockerfile
    depends_on:
      - postgres
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgresql://postgres:postgres@postgres:5432/banners?sslmode=disable"
    command: [ "/bin/sh", "-c", "net-wait-go -addrs postgres:5432 && sleep 5 && /bin/goose up" ]

networks:
  localnet:
    driver: bridge